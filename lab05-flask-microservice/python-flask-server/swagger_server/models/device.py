# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Device(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, host: int=None, unit: str=None):  # noqa: E501
        """Device - a model defined in Swagger

        :param host: The host of this Device.  # noqa: E501
        :type host: int
        :param unit: The unit of this Device.  # noqa: E501
        :type unit: str
        """
        self.swagger_types = {
            'host': int,
            'unit': str
        }

        self.attribute_map = {
            'host': 'host',
            'unit': 'unit'
        }

        self._host = host
        self._unit = unit

    @classmethod
    def from_dict(cls, dikt) -> 'Device':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The device of this Device.  # noqa: E501
        :rtype: Device
        """
        return util.deserialize_model(dikt, cls)

    @property
    def host(self) -> int:
        """Gets the host of this Device.


        :return: The host of this Device.
        :rtype: int
        """
        return self._host

    @host.setter
    def host(self, host: int):
        """Sets the host of this Device.


        :param host: The host of this Device.
        :type host: int
        """

        self._host = host

    @property
    def unit(self) -> str:
        """Gets the unit of this Device.


        :return: The unit of this Device.
        :rtype: str
        """
        return self._unit

    @unit.setter
    def unit(self, unit: str):
        """Sets the unit of this Device.


        :param unit: The unit of this Device.
        :type unit: str
        """

        self._unit = unit
