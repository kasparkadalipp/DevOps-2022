apiVersion: apps/v1
kind: Deployment
metadata:
  name: influxdb-deployment
  labels:
    app: influxdb-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: influxdb-app
  template:
    metadata:
      labels:
        app: influxdb-app
    spec:
      containers:
      - name: influxdb-app
        image: influxdb:1.1.1
        ports:
        - containerPort: 8086
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chronograf-deployment
  labels:
    app: chronograf-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chronograf-app
  template:
    metadata:
      labels:
        app: chronograf-app
    spec:
      containers:
      - name: chronograf-app
        image: chronograf:latest
        env:
        - name: INFLUXDB_URL
          value: http://influxdb-service:8086
        ports:
        - containerPort: 8888

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-deployment
  labels:
    app: grafana-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana-app
  template:
    metadata:
      labels:
        app: grafana-app
    spec:
      securityContext:
        fsGroup: 2000 
      containers:
      - name: grafana-app
        image: grafana/grafana:latest
        ports:
        - containerPort: 8888
        volumeMounts:
          - name: nfs-vol
            mountPath: /etc/grafana/provisioning
      volumes:
        - name: nfs-vol
          nfs:
            server: 172.17.91.48 # Controller
            path: /tmp/grafana-provisioning
      
---
apiVersion: v1
kind: Service
metadata:
  name: influxdb-service
spec:
  type: NodePort
  selector:
    app: influxdb-app
  ports:
  - protocol: TCP
    port: 8086 # internal cluster port
    targetPort: 8086 # Port your application listen on in pods/containers
    name: tcp-8086

---
apiVersion: v1
kind: Service
metadata:
  name: chronograf-service
spec:
  type: NodePort
  selector:
    app: chronograf-app
  ports:
  - protocol: TCP
    port: 8888 # internal cluster port
    targetPort: 8888 # Port your application listen on in pods/containers
    name: tcp-8888

---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
spec:
  type: NodePort
  selector:
    app: grafana-app
  ports:
  - protocol: TCP
    port: 3000 # internal cluster port
    targetPort: 3000 # Port your application listen on in pods/containers
    name: tcp-3000
